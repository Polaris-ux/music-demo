<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mjy.musicdemo.dao.RanksMapper">
  <resultMap id="BaseResultMap" type="com.mjy.musicdemo.entity.Ranks">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="song_list_id" jdbcType="INTEGER" property="songListId" />
    <result column="consumer_id" jdbcType="INTEGER" property="consumerId" />
    <result column="score" jdbcType="INTEGER" property="score" />
  </resultMap>
  <sql id="Base_Column_List">
    id, song_list_id, consumer_id, score
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ranks
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ranks
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mjy.musicdemo.entity.Ranks">
    insert into ranks (id, song_list_id, consumer_id, 
      score)
    values (#{id,jdbcType=INTEGER}, #{songListId,jdbcType=INTEGER}, #{consumerId,jdbcType=INTEGER}, 
      #{score,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.mjy.musicdemo.entity.Ranks">
    insert into ranks
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="songListId != null">
        song_list_id,
      </if>
      <if test="consumerId != null">
        consumer_id,
      </if>
      <if test="score != null">
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="songListId != null">
        #{songListId,jdbcType=INTEGER},
      </if>
      <if test="consumerId != null">
        #{consumerId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mjy.musicdemo.entity.Ranks">
    update ranks
    <set>
      <if test="songListId != null">
        song_list_id = #{songListId,jdbcType=INTEGER},
      </if>
      <if test="consumerId != null">
        consumer_id = #{consumerId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mjy.musicdemo.entity.Ranks">
    update ranks
    set song_list_id = #{songListId,jdbcType=INTEGER},
      consumer_id = #{consumerId,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.mjy.musicdemo.entity.Ranks">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="song_list_id" jdbcType="INTEGER" property="songListId" />
    <result column="consumer_id" jdbcType="INTEGER" property="consumerId" />
    <result column="score" jdbcType="INTEGER" property="score" />
  </resultMap>
  <sql id="Base_Column_List">
    id, song_list_id, consumer_id, score
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ranks
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ranks
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mjy.musicdemo.entity.Ranks">
    insert into ranks (id, song_list_id, consumer_id, 
      score)
    values (#{id,jdbcType=INTEGER}, #{songListId,jdbcType=INTEGER}, #{consumerId,jdbcType=INTEGER}, 
      #{score,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.mjy.musicdemo.entity.Ranks">
    insert into ranks
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="songListId != null">
        song_list_id,
      </if>
      <if test="consumerId != null">
        consumer_id,
      </if>
      <if test="score != null">
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="songListId != null">
        #{songListId,jdbcType=INTEGER},
      </if>
      <if test="consumerId != null">
        #{consumerId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mjy.musicdemo.entity.Ranks">
    update ranks
    <set>
      <if test="songListId != null">
        song_list_id = #{songListId,jdbcType=INTEGER},
      </if>
      <if test="consumerId != null">
        consumer_id = #{consumerId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mjy.musicdemo.entity.Ranks">
    update ranks
    set song_list_id = #{songListId,jdbcType=INTEGER},
      consumer_id = #{consumerId,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.mjy.musicdemo.entity.Ranks">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="song_list_id" jdbcType="INTEGER" property="songListId" />
    <result column="consumer_id" jdbcType="INTEGER" property="consumerId" />
    <result column="score" jdbcType="INTEGER" property="score" />
  </resultMap>
  <sql id="Base_Column_List">
    id, song_list_id, consumer_id, score
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ranks
    where id = #{id,jdbcType=INTEGER}
  </select>
  <insert id="insert" parameterType="com.mjy.musicdemo.entity.Ranks">
    insert into ranks (id, song_list_id, consumer_id, 
      score)
    values (#{id,jdbcType=INTEGER}, #{songListId,jdbcType=INTEGER}, #{consumerId,jdbcType=INTEGER}, 
      #{score,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.mjy.musicdemo.entity.Ranks">
    insert into ranks
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="songListId != null">
        song_list_id,
      </if>
      <if test="consumerId != null">
        consumer_id,
      </if>
      <if test="score != null">
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="songListId != null">
        #{songListId,jdbcType=INTEGER},
      </if>
      <if test="consumerId != null">
        #{consumerId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <select id="getAllRanks" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ranks
    where song_list_id=#{songListId}
  </select>

  <select id="getRanksVo" resultType="com.mjy.musicdemo.entity.vo.RanksVo">
    select coalesce(sum(score),0) scoreSum,coalesce(count(distinct(consumer_id)),0) allNum
    from ranks where song_list_id=#{songListId}
  </select>
</mapper>