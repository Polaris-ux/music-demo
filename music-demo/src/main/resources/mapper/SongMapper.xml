<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mjy.musicdemo.dao.SongMapper">
  <resultMap id="BaseResultMap" type="com.mjy.musicdemo.entity.Song">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="singer_id" jdbcType="INTEGER" property="singerId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="url" jdbcType="VARCHAR" property="url" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.mjy.musicdemo.entity.Song">
    <result column="lyric" jdbcType="LONGVARCHAR" property="lyric" />
  </resultMap>
  <sql id="Base_Column_List">
    id, singer_id, name, introduction, create_time, update_time, pic, url
  </sql>
  <sql id="Blob_Column_List">
    lyric
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from song
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from song
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mjy.musicdemo.entity.Song">
    insert into song (id, singer_id, name, 
      introduction, create_time, update_time, 
      pic, url, lyric
      )
    values (#{id,jdbcType=INTEGER}, #{singerId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{introduction,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{pic,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{lyric,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mjy.musicdemo.entity.Song">
    insert into song
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="singerId != null">
        singer_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="lyric != null">
        lyric,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="singerId != null">
        #{singerId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="lyric != null">
        #{lyric,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mjy.musicdemo.entity.Song">
    update song
    <set>
      <if test="singerId != null">
        singer_id = #{singerId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="lyric != null">
        lyric = #{lyric,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mjy.musicdemo.entity.Song">
    update song
    set singer_id = #{singerId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      pic = #{pic,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      lyric = #{lyric,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mjy.musicdemo.entity.Song">
    update song
    set singer_id = #{singerId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      pic = #{pic,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.mjy.musicdemo.entity.Song">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="singer_id" jdbcType="INTEGER" property="singerId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="url" jdbcType="VARCHAR" property="url" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.mjy.musicdemo.entity.Song">
    <result column="lyric" jdbcType="LONGVARCHAR" property="lyric" />
  </resultMap>
  <sql id="Base_Column_List">
    id, singer_id, name, introduction, create_time, update_time, pic, url
  </sql>
  <sql id="Blob_Column_List">
    lyric
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from song
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from song
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mjy.musicdemo.entity.Song">
    insert into song (id, singer_id, name, 
      introduction, create_time, update_time, 
      pic, url, lyric
      )
    values (#{id,jdbcType=INTEGER}, #{singerId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{introduction,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{pic,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{lyric,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mjy.musicdemo.entity.Song">
    insert into song
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="singerId != null">
        singer_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="lyric != null">
        lyric,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="singerId != null">
        #{singerId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="lyric != null">
        #{lyric,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mjy.musicdemo.entity.Song">
    update song
    <set>
      <if test="singerId != null">
        singer_id = #{singerId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="lyric != null">
        lyric = #{lyric,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mjy.musicdemo.entity.Song">
    update song
    set singer_id = #{singerId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      pic = #{pic,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      lyric = #{lyric,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mjy.musicdemo.entity.Song">
    update song
    set singer_id = #{singerId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      pic = #{pic,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.mjy.musicdemo.entity.Song">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="singer_id" jdbcType="INTEGER" property="singerId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="url" jdbcType="VARCHAR" property="url" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.mjy.musicdemo.entity.Song">
    <result column="lyric" jdbcType="LONGVARCHAR" property="lyric" />
  </resultMap>
  <sql id="Base_Column_List">
    id, singer_id, name, introduction, create_time, update_time, pic, url
  </sql>
  <sql id="Blob_Column_List">
    lyric
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from song
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from song
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mjy.musicdemo.entity.Song">
    insert into song (id, singer_id, name, 
      introduction, create_time, update_time, 
      pic, url, lyric
      )
    values (#{id,jdbcType=INTEGER}, #{singerId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{introduction,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{pic,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{lyric,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mjy.musicdemo.entity.Song">
    insert into song
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="singerId != null">
        singer_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="lyric != null">
        lyric,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="singerId != null">
        #{singerId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="lyric != null">
        #{lyric,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mjy.musicdemo.entity.Song">
    update song
    <set>
      <if test="singerId != null">
        singer_id = #{singerId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="lyric != null">
        lyric = #{lyric,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mjy.musicdemo.entity.Song">
    update song
    set singer_id = #{singerId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      pic = #{pic,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      lyric = #{lyric,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mjy.musicdemo.entity.Song">
    update song
    set singer_id = #{singerId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      pic = #{pic,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getSongByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from song
    <where>
      <if test="name!=null">
        name like concat('%',#{name},'%');
      </if>
    </where>
  </select>

  <select id="getSongByNameWithBlobs" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />,
    <include refid="Blob_Column_List" />
    from song
    <where>
      <if test="name!=null">
        name like concat('%',#{name},'%');
      </if>
    </where>
  </select>

  <select id="getSongBySinger" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />,
    <include refid="Blob_Column_List" />
    from song
    <where>
      <if test="singerId!=null">
        singer_id=#{singerId,jdbcType=INTEGER}
      </if>
      <if test="key!=null">
        and name like concat('%',#{key},'%')
      </if>
    </where>

  </select>

  <select id="batchGetSong" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />,
    <include refid="Blob_Column_List" />
    from song
    where id in
    <foreach close=")" collection="list" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </select>

  <select id="getSongIdByName" resultType="java.lang.Integer">
    select id from song where name=#{name};
  </select>

  <delete id="deleteSongByIds">
    delete from song
    where id in
    <foreach close=")" collection="list" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </delete>

  <delete id="deleteSongsBySinger" parameterType="java.lang.Integer">
    delete from song
    where singer_id=#{singerId,jdbcType=INTEGER}
  </delete>

  <select id="getSongNum" resultType="java.lang.Integer">
    select count(distinct(name)) from song;
  </select>

  <select id="getPageSongs" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />,
    <include refid="Blob_Column_List" />
    from song
  </select>

  <select id="getSongsByKey" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />,
    <include refid="Blob_Column_List" />
    from song
    where name like concat('%',#{key},'%')
  </select>
  <select id="getAllSongBySingerId" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />,
    <include refid="Blob_Column_List" />
    from song
    where singer_id=#{singerId}
  </select>
</mapper>